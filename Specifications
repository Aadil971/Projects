Every year, organizations across the movie industry present awards for excellent movies from the previous year. For your second portfolio project, you are being asked to design a terminal-based application for searching and printing award information based on given input information. Your application must meet the following design specifications:

Your user interface should prompt the user to input the following information:
Select 1 to search for a movie title
Select 2 to search for a specific awards organization
Select 0 to end the program
Menu option 1: If the user selects 1, they should then be asked to enter a movie title
As long as the title is spelled correctly, your program should accept any combination of letter cases and leading/trailing whitespace (e.g. both "Lord of the Rings" and "    lorD oF the RinGS    " should be valid
You do not need to consider extra whitespace in the middle of the string
Your program should then output the total number of awards won by that movie across all of the organizations listed in the data file
If the movie title is not included in any of the awards list, the total printed is zero
After printing the total, return to the first menu input prompt
Menu option 2: If the user selects 2, they should then be asked to choose from a list of awards organizations
As long as the organization acronym is spelled correctly, your program should accept any combination of letter cases and leading/trailing whitespace (e.g. both "Oscars" and "    osCarS    " should be valid
You do not need to consider extra whitespace in the middle of the string
Your program should then print all of the winning movies chosen by that organization, with each title on a new line
If the entered organization cannot be found, print a notification message
After printing, return to the first menu input prompt
Menu option 0: If the user selects 0, print the goodbye message and end the program
If the user enters a value other than 0, 1, or 2, they should be prompted to try again
The program should continue to prompt for input until the user enters 0
Your user interface must exactly match the given screenshot below. Pre-coded strings are provided in the starter template to help with exact formatting.
Your file should be called "awards.py". A starter template is provided in the VS Code environment window.
The data to be used is provided in a second .py file called "awards_data.py". You should not modify this file. Both files must be located in the same directory.
You may not hardcode (manually add into the code) any data values beyond those given in the data section. The data lists may be changed for testing.
A screenshot with example terminal behaviour is included below the rubric.
Your code must include and use at least two user-defined functions
The function stubs are provided in the given template- you must use the given name and argument structure
Your functions may not access global variables aside from those presented in the data section
count_awards accepts the movie title as a string and must return an integer value of the total award count
print_award_winners accepts the name of the organization as a string and does not return any values
All functions must include docstring documentation
Your code must follow the conventions discussed so far in the course (names_with_underscores, four spaces for indentations, spaces between variables/operators, comments throughout, etc.).
You may only use built-in Python functions that support compound data structures, user entry, or casting (such as len(), input() or int()). You may not import any modules beyond the given data file.